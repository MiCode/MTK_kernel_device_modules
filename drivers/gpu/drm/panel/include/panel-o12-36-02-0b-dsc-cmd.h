/* SPDX-License-Identifier: GPL-2.0-only */
/*
 * Copyright (c) 2020, The Linux Foundation. All rights reserved.
 * Copyright (c) 2020 XiaoMi, Inc. All rights reserved.
 */

#ifndef _PANEL_O12_36_02_0B_DSC_CMD_H_
#define _PANEL_O12_36_02_0B_DSC_CMD_H_

#include <drm/drm_panel.h>
#include <drm/drm_modes.h>
#include <drm/mediatek_drm.h>
#include "mi_panel_ext.h"

#define DATA_RATE0		1200
#define DATA_RATE1		1200
#define DATA_RATE2		1200
#define DATA_RATE3		1200

#define MODE3_FPS		144
#define MODE3_HFP		160
#define MODE3_HSA		2
#define MODE3_HBP		4
#define MODE3_VFP		54
#define MODE3_VSA		10
#define MODE3_VBP		10

#define MODE2_FPS		90
#define MODE2_HFP		160
#define MODE2_HSA		2
#define MODE2_HBP		4
#define MODE2_VFP		54
#define MODE2_VSA		10
#define MODE2_VBP		10

#define MODE1_FPS		120
#define MODE1_HFP		160
#define MODE1_HSA		2
#define MODE1_HBP		4
#define MODE1_VFP		54
#define MODE1_VSA		10
#define MODE1_VBP		10

#define MODE0_FPS		60
#define MODE0_HFP		408
#define MODE0_HSA		2
#define MODE0_HBP		4
#define MODE0_VFP		54
#define MODE0_VSA		10
#define MODE0_VBP		10

#define FRAME_WIDTH		(1280)
#define	FRAME_HEIGHT		(2772)
#define PHYSICAL_WIDTH              72730
#define PHYSICAL_HEIGHT             157505
#define MAX_BRIGHTNESS_CLONE	16383
#define RTE_OFF			0xFFFF
#define RTE_CMD			0xEEEE

#define REGFLAG_DELAY		0xFFFC
#define REGFLAG_UDELAY		0xFFFB
#define REGFLAG_END_OF_TABLE    0xFFFD
#define REGFLAG_RESET_LOW	0xFFFE
#define REGFLAG_RESET_HIGH	0xFFFF

#define GAMMA_RATIO_W250	3
#define GAMMA_RATIO_G500	3
#define GAMMA_RATIO_W1300	17

#define SPR_2D_RENDERING_DUMMY
#ifdef SPR_2D_RENDERING_DUMMY
#define SPR_2D_RENDERING (1)
#endif

#define DSC_DISABLE                 0
#define DSC_ENABLE                  1
#define DSC_VER                     18
#define DSC_SLICE_MODE              1
#define DSC_RGB_SWAP                0
#define DSC_DSC_CFG                 40
#define DSC_RCT_ON                  1
#define DSC_BIT_PER_CHANNEL         10
#define DSC_DSC_LINE_BUF_DEPTH      11
#define DSC_BP_ENABLE               1
#define DSC_BIT_PER_PIXEL           128
#define DSC_SLICE_HEIGHT            12
#define DSC_SLICE_WIDTH             640
#define DSC_CHUNK_SIZE              640
#define DSC_XMIT_DELAY              512
#define DSC_DEC_DELAY               577
#define DSC_SCALE_VALUE             32
#define DSC_INCREMENT_INTERVAL      312
#define DSC_DECREMENT_INTERVAL      8
#define DSC_LINE_BPG_OFFSET         12
#define DSC_NFL_BPG_OFFSET          2235
#define DSC_SLICE_BPG_OFFSET        1825
#define DSC_INITIAL_OFFSET          6144
#define DSC_FINAL_OFFSET            4336
#define DSC_FLATNESS_MINQP          7
#define DSC_FLATNESS_MAXQP          16
#define DSC_RC_MODEL_SIZE           8192
#define DSC_RC_EDGE_FACTOR          6
#define DSC_RC_QUANT_INCR_LIMIT0    15
#define DSC_RC_QUANT_INCR_LIMIT1    15
#define DSC_RC_TGT_OFFSET_HI        3
#define DSC_RC_TGT_OFFSET_LO        3

static const char *panel_name = "panel_name=dsi_o12_36_02_0b_dsc_cmd";
static const int panel_id = 2;
//static const int doze_hbm_dbv_level = 1024;
//static const int doze_lbm_dbv_level = 61;
static int PEAK_HDR_BL_LEVEL = 15603;
static int PEAK_MAX_BL_LEVEL = 16383;
//#define PEAK_WITH_GIR_OFF
#define DIMMING_ON_THRESHOLD_BEFORE_BL_OFF 12000

//extern uint32_t get_hw_country_version(void);

typedef enum {
	CountryCN = 0x00,
	CountryGlobal = 0x01,
	CountryIndia = 0x02,
	CountryJapan = 0x03,
	CountryIDMax = 0x7FFFFFFF
} CountryType;

/* init code for CNP0 */
static struct LCM_setting_table init_setting[] = {
	/* Demura gain mapping start */
	/*
	 * 2F=00 120Hz D200~D2A7(LUT0)
	 * 2F=01 90Hz D400~D4A7(LUT1)
	 * 2F=02 60Hz D500~D5A7(LUT1)
	 * 2F=03 144Hz ED00~EDA7(LUT1)
	 */
	{0xF0,05,{0x55,0xAA,0x52,0x08,0x00}},
	{0x6F,01,{0x31}},
	{0xC0,02,{0x01,0x23}},
	{0xC7,01,{0x44}},
	/* Demura gain mapping end */

	/* APL DS setting start */
	{0xF0,05,{0x55,0xAA,0x52,0x08,0x00}},
	{0x6F,01,{0x78}},
	{0xB0,23,{0x11,0x00,0x2A,0x00,0xC2,0x01,0xDA,0x03,0x7C,0x05,0xB1,0x08,0x80,0x0B,0xEE,0x0F,0xFF,0x05,0x55,0x05,0x56,0x05,0x55}},
	{0x6F,01,{0x6F}},
	{0xB0,06,{0x02,0x80,0x05,0x00,0x02,0x80}},
	{0xF0,05,{0x55,0xAA,0x52,0x08,0x08}},
	{0xC1,22,{0x8C,0xFF,0xCC,0xFF,0xFF,0xCC,0xFF,0xFF,0xCC,0xFF,0xFF,0xEE,0x7F,0x7F,0xEE,0x7F,0x7F,0xFE,0xFF,0xFF,0x0E,0x7F}},
	{0x6F,01,{0x20}},
	{0xC1,03,{0x4F,0x00,0xFF}},
	{0x6F,01,{0x23}},
	{0xC1,20,{0x0C,0xFF,0xCC,0xFF,0xFF,0xCC,0xFF,0xFF,0xCC,0xFF,0xFF,0xEE,0x7F,0x7F,0xEE,0x7F,0x7F,0xCE,0xFF,0x01}},
	/* APL DS setting end */

	/* Internal Power off sequence delay setting start */
	/* 6 frames */
	{0XFF,04,{0XAA,0X55,0XA5,0X80}},
	{0X6F,01,{0X0A}},
	{0XF6,06,{0X60,0X60,0X60,0X60,0X60,0X60}},
	/* Internal Power off sequence delay setting end */

	{0x2A,04,{0x00,0x00,0x04,0xFF}},
	{0x2B,04,{0x00,0x00,0x0A,0xD3}},

	/* pps setting start */
	/* Compression_Method[2:0] = 3 (VESA), Compression_Method_AOD[2:0] = 3 (VESA) */
	{0x90,02,{0x03,0x43}},
	/* VESA_10bpc, 8bpp, slice_h = 12 */
	{0x91,18,{0xAB,0xA8,0x00,0x0C,0xC2,0x00,0x02,0x41,0x01,0x38,0x00,0x08,0x08,0xBB,0x07,0x21,0x10,0xF0}},
	/* pps setting end */

	{0x2F,01,{0x00}},
	{0x5F,01,{0x00}},
	{0x51,02,{0x00,0x00}},
	{0x6F,01,{0x04}},
	{0x51,02,{0x3F,0xFF}},
	{0x53,01,{0x20}},

	/* Hsync setting start */
	{0xF0,05,{0x55,0xAA,0x52,0x08,0x00}},
	{0xBF,01,{0x0F}},
	/* Hsync setting end */

	/* esd setting start */
	{0xF0, 05, {0x55,0xAA,0x52,0x08,0x00}},
	{0x6F, 01, {0x01}},
	{0xBE, 01, {0x45}},
	{0x6F, 01, {0x05}},
	{0xBE, 01, {0x88}},
	/* esd setting end */

	/* te setting start */
	{0x35,01,{0x00}},
	{0x6F,01,{0x26}},
	{0x44,07,{0x00,0x33,0x00,0x33,0x4B,0x03,0xA4}},
	{0x6F,01,{0x34}},
	{0x44,07,{0x00,0x0C,0x00,0x0C,0x4B,0x03,0xA4}},
	{0x6F,01,{0x02}},
	{0x35,01,{0x00}},
	{0x6F,01,{0x14}},
	{0x35,03,{0x63,0x6C,0x7D}},
	/* te setting end */

	/* video trim start */
	{0xF0,05,{0x55,0xAA,0x52,0x08,0x01}},
	{0x6F,01,{0x2F}},
	{0xC3,01,{0x44}},
	{0x6F,01,{0x00}},
	{0xC3,01,{0x99}},
	{0x6F,01,{0x30}},
	{0xC3,01,{0x00}},
	{0x6F,01,{0x0B}},
	{0xC3,03,{0x3F,0x68,0x5C}},
	{0x6F,01,{0x11}},
	{0xC3,03,{0x3F,0x68,0x5C}},
	{0x6F,01,{0x17}},
	{0xC3,03,{0x3F,0x68,0x5C}},
	{0x6F,01,{0x1D}},
	{0xC3,03,{0x3F,0x68,0x5C}},
	{0x6F,01,{0x23}},
	{0xC3,03,{0x3F,0x38,0x5C}},
	{0x6F,01,{0x0E}},
	{0xC3,03,{0x3F,0x55,0xE7}},
	{0x6F,01,{0x14}},
	{0xC3,03,{0x3F,0x55,0xE7}},
	{0x6F,01,{0x1A}},
	{0xC3,03,{0x3F,0x55,0xE7}},
	{0x6F,01,{0x20}},
	{0xC3,03,{0x3F,0x55,0xE7}},
	{0x6F,01,{0x26}},
	{0xC3,03,{0x3F,0x55,0xE7}},
	{0x6F,01,{0x29}},
	{0xC3,03,{0x11,0x11,0x01}},
	{0x6F,01,{0x2C}},
	{0xC3,03,{0x00,0x00,0x00}},
	{0x6F,01,{0x31}},
	{0xC3,02,{0xAA,0x02}},
	{0x6F,01,{0x33}},
	{0xC3,02,{0xAA,0x02}},
	{0x6F,01,{0x04}},
	{0xC3,01,{0xE3}},
	{0x6F,01,{0x09}},
	{0xC3,01,{0xE3}},
	{0x6F,01,{0x01}},
	{0xC3,01,{0x29}},
	{0x6F,01,{0x06}},
	{0xC3,01,{0x29}},
	{0x6F,01,{0x02}},
	{0xC3,02,{0x02,0x70}},
	{0x6F,01,{0x08}},
	{0xC3,01,{0x70}},
	/* video trim end */

	/* demura setting start */
	{0xF0,05,{0x55,0xAA,0x52,0x08,0x04}},
	{0x6F,01,{0x06}},
	{0xB5,01,{0x00}},
	{0xA3,05,{0x83,0x03,0x28,0x03,0x28}},
	{0x11,01,{0x00}},
	{REGFLAG_DELAY, 110, {}},
	{0xA3,18,{0x83,0x03,0x28,0x03,0x28,0x02,0x04,0xB5,0x02,0x03,0x00,0x03,0x00,0x00,0x00,0x00,0x00,0x00}},
	{0x6F,01,{0x12}},
	{0xA3,13,{0x01,0x00,0x9D,0x00,0x00,0xAA,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
	{0x6F,01,{0x53}},
	{0xA3,13,{0x02,0x04,0xB5,0x02,0x03,0x00,0x0C,0x00,0x00,0x00,0x00,0x00,0x00}},
	{0x6F,01,{0x60}},
	{0xA3,13,{0x01,0x00,0x9D,0x00,0x00,0xAA,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
	{0x29,01,{0x00}},
	/* demura setting end */

	{REGFLAG_END_OF_TABLE, 0x00, {}}
};

static struct LCM_setting_table init_setting_p11[] = {
	/* Demura gain mapping start */
	/*
	 * 2F=00 120Hz D200~D2A7(LUT0)
	 * 2F=01 90Hz D400~D4A7(LUT1)
	 * 2F=02 60Hz D500~D5A7(LUT1)
	 * 2F=03 144Hz ED00~EDA7(LUT1)
	 */
	{0xF0,05,{0x55,0xAA,0x52,0x08,0x00}},
	{0x6F,01,{0x31}},
	{0xC0,02,{0x01,0x23}},
	{0xC7,01,{0x44}},
	/* Demura gain mapping end */

	/* APL DS setting start */
	{0xF0,05,{0x55,0xAA,0x52,0x08,0x00}},
	{0x6F,01,{0x78}},
	{0xB0,23,{0x11,0x00,0x2A,0x00,0xC2,0x01,0xDA,0x03,0x7C,0x05,0xB1,0x08,0x80,0x0B,0xEE,0x0F,0xFF,0x05,0x55,0x05,0x56,0x05,0x55}},
	{0x6F,01,{0x6F}},
	{0xB0,06,{0x02,0x80,0x05,0x00,0x02,0x80}},
	{0xF0,05,{0x55,0xAA,0x52,0x08,0x08}},
	{0xC1,22,{0x8C,0xFF,0xCC,0xFF,0xFF,0xCC,0xFF,0xFF,0xCC,0xFF,0xFF,0xEE,0x7F,0x7F,0xEE,0x7F,0x7F,0xFE,0xFF,0xFF,0x0E,0x7F}},
	{0x6F,01,{0x20}},
	{0xC1,03,{0x4F,0x00,0xFF}},
	{0x6F,01,{0x23}},
	{0xC1,20,{0x0C,0xFF,0xCC,0xFF,0xFF,0xCC,0xFF,0xFF,0xCC,0xFF,0xFF,0xEE,0x7F,0x7F,0xEE,0x7F,0x7F,0xCE,0xFF,0x11}},
	/* APL DS setting end */

	/* Internal Power off sequence delay setting start */
	/* 6 frames */
	{0XFF,04,{0XAA,0X55,0XA5,0X80}},
	{0X6F,01,{0X0A}},
	{0XF6,06,{0X60,0X60,0X60,0X60,0X60,0X60}},
	/* Internal Power off sequence delay setting end */

	{0x2A,04,{0x00,0x00,0x04,0xFF}},
	{0x2B,04,{0x00,0x00,0x0A,0xD3}},

	/* pps setting start */
	/* Compression_Method[2:0] = 3 (VESA), Compression_Method_AOD[2:0] = 3 (VESA) */
	{0x90,02,{0x03,0x43}},
	/* VESA_10bpc, 8bpp, slice_h = 12 */
	{0x91,18,{0xAB,0xA8,0x00,0x0C,0xC2,0x00,0x02,0x41,0x01,0x38,0x00,0x08,0x08,0xBB,0x07,0x21,0x10,0xF0}},
	/* pps setting end */

	{0x2F,01,{0x00}},
	{0x5F,01,{0x00}},
	{0x35,01,{0x00}}, /* TE ON */
	{0x51,02,{0x00,0x00}},
	{0x6F,01,{0x04}},
	{0x51,02,{0x3F,0xFF}},
	{0x53,01,{0x20}},

	/* esd setting start */
	{0xF0, 05, {0x55,0xAA,0x52,0x08,0x00}},
	{0x6F, 01, {0x01}},
	{0xBE, 01, {0x45}},
	{0x6F, 01, {0x05}},
	{0xBE, 01, {0x88}},
	/* esd setting end */

	/* te setting start */
	//TE_RW_rising_command mode
	//dyn_multi_te_start=dyn_multi_te_start_skip=0x33(51)/=dyn_multi_te_width=0x4B(75)/dyn_multi_te_interval=0x3A4(932)
	{0x6F,01,{0x26}},
	{0x44,07,{0x00,0x33,0x00,0x33,0x4B,0x03,0xA4}},
	//dyn_multi_te_start_IDLE=dyn_multi_te_start_IDLE_skip=0x0C(12)/dyn_multi_te_width_IDLE=0x4B(75)/dyn_multi_te_interval_IDLE=0x3A4(932)
	{0x6F,01,{0x34}},
	{0x44,07,{0x00,0x0C,0x00,0x0C,0x4B,0x03,0xA4}},
	//TE_RW_falling_command mode
	//TE07_DPU_DELAY[7:0]=0x00, RW falling by 2nd VFP line(relative to AP)
	{0x6F,01,{0x02}},
	{0x35,01,{0x00}},
	//which TE to select
	//TE07_sel_cmd=63(Last TE)/6C(multi TE)/TE1F_sel_cmd=6A(level TE2)/TE20_sel_cmd=7D(Test TE)
	{0x6F,01,{0x14}},
	{0x35,03,{0x63,0x6C,0x7D}},
	/* te setting end */

	//porch source:VFP=HIZ VBP=KEEP LAST LINE
	{0xF0,05,{0x55,0xAA,0x52,0x08,0x00}},
	{0x6F,01,{0x0B}},
	{0xC2,01,{0x10}},

	{0xC5,03,{0x44,0x22,0x00}},
	{0xFF,04,{0xAA,0x55,0xA5,0x81}},
	{0x6F,01,{0x0D}},
	{0xFD,01,{0x40}},

	/* video trim start */
	{0xF0,05,{0x55,0xAA,0x52,0x08,0x01}},
	{0x6F,01,{0x2F}},
	{0xC3,01,{0x44}},
	{0x6F,01,{0x00}},
	{0xC3,01,{0x99}},
	{0x6F,01,{0x30}},
	{0xC3,01,{0x00}},
	{0x6F,01,{0x0B}},
	{0xC3,03,{0x3F,0x68,0x5C}},
	{0x6F,01,{0x11}},
	{0xC3,03,{0x3F,0x68,0x5C}},
	{0x6F,01,{0x17}},
	{0xC3,03,{0x3F,0x68,0x5C}},
	{0x6F,01,{0x1D}},
	{0xC3,03,{0x3F,0x68,0x5C}},
	{0x6F,01,{0x23}},
	{0xC3,03,{0x3F,0x38,0x5C}},
	{0x6F,01,{0x0E}},
	{0xC3,03,{0x3F,0x55,0xE7}},
	{0x6F,01,{0x14}},
	{0xC3,03,{0x3F,0x55,0xE7}},
	{0x6F,01,{0x1A}},
	{0xC3,03,{0x3F,0x55,0xE7}},
	{0x6F,01,{0x20}},
	{0xC3,03,{0x3F,0x55,0xE7}},
	{0x6F,01,{0x26}},
	{0xC3,03,{0x3F,0x55,0xE7}},
	{0x6F,01,{0x29}},
	{0xC3,03,{0x11,0x11,0x01}},
	{0x6F,01,{0x2C}},
	{0xC3,03,{0x00,0x00,0x00}},
	{0x6F,01,{0x31}},
	{0xC3,02,{0xAA,0x02}},
	{0x6F,01,{0x33}},
	{0xC3,02,{0xAA,0x02}},
	{0x6F,01,{0x04}},
	{0xC3,01,{0xE3}},
	{0x6F,01,{0x09}},
	{0xC3,01,{0xE3}},
	{0x6F,01,{0x01}},
	{0xC3,01,{0x29}},
	{0x6F,01,{0x06}},
	{0xC3,01,{0x29}},
	{0x6F,01,{0x02}},
	{0xC3,02,{0x02,0x70}},
	{0x6F,01,{0x08}},
	{0xC3,01,{0x70}},
	/* video trim end */

	/* demura setting start */
	{0xF0,05,{0x55,0xAA,0x52,0x08,0x04}},
	{0x6F,01,{0x06}},
	{0xB5,01,{0x00}},
	{0xA3,05,{0x83,0x03,0x28,0x03,0x28}},
	{0x11,01,{0x00}},
	{REGFLAG_DELAY, 110, {}},
	{0xA3,18,{0x83,0x03,0x28,0x03,0x28,0x02,0x04,0xB5,0x02,0x03,0x00,0x03,0x00,0x00,0x00,0x00,0x00,0x00}},
	{0x6F,01,{0x12}},
	{0xA3,13,{0x01,0x00,0x9D,0x00,0x00,0xAA,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
	{0x6F,01,{0x53}},
	{0xA3,13,{0x02,0x04,0xB5,0x02,0x03,0x00,0x0C,0x00,0x00,0x00,0x00,0x00,0x00}},
	{0x6F,01,{0x60}},
	{0xA3,13,{0x01,0x00,0x9D,0x00,0x00,0xAA,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
	{0x29,01,{0x00}},
	/* demura setting end */
	{REGFLAG_END_OF_TABLE, 0x00, {} }
};

static struct LCM_setting_table gray_3d_lut[] = {
	{0x81, 02, {0x03,0x20}},
};

static struct LCM_setting_table gray_3d_lut_off[] = {
	{0x81, 02, {0x03,0x19}},
};

/* mode switch start */
static struct LCM_setting_table mode_144hz_setting[] = {
	{0x2F, 01, {0x03}},
	{0xF0, 05, {0x55,0xAA,0x52,0x08,0x08}},
	{0x6F, 01, {0x10}},
	/* VDC gain */
	{0xB7, 16, {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0C,0x10,0x0C,0x10,0x0C,0x10,0x0C,0x10}},
	{0x6F, 01, {0x20}},
	{0xB7, 14, {0x0C,0x10,0x0C,0x10,0x0C,0x10,0x0C,0x10,0x0B,0x48,0x0B,0x48,0x0C,0x74}},
	{REGFLAG_END_OF_TABLE, 0x00, {}}
};

static struct LCM_setting_table mode_120hz_setting[] = {
	{0x2F, 01, {0x00}},
	{0xF0, 05, {0x55,0xAA,0x52,0x08,0x08}},
	{0x6F, 01, {0x10}},
	/* VDC gain */
	{0xB7, 16, {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x07,0x8E,0x07,0x8E,0x08,0x0E,0x08,0x0E}},
	{0x6F, 01, {0x20}},
	{0xB7, 14, {0x07,0x7F,0x07,0x7F,0x07,0x76,0x07,0x76,0x08,0x00,0x08,0x00,0x0A,0x44}},
	{REGFLAG_END_OF_TABLE, 0x00, {}}
};

static struct LCM_setting_table mode_90hz_setting[] = {
	{0x2F, 01, {0x01}},
	{0xF0, 05, {0x55,0xAA,0x52,0x08,0x08}},
	{0x6F, 01, {0x10}},
	/* VDC gain */
	{0xB7, 16, {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x07,0x8E,0x07,0x8E,0x08,0x0E,0x08,0x0E}},
	{0x6F, 01, {0x20}},
	{0xB7, 14, {0x07,0x7F,0x07,0x7F,0x07,0x76,0x07,0x76,0x08,0x00,0x08,0x00,0x0A,0x44}},
	{REGFLAG_END_OF_TABLE, 0x00, {}}
};

static struct LCM_setting_table mode_60hz_setting[] = {
	{0x2F, 01, {0x02}},
	{0xF0, 05, {0x55,0xAA,0x52,0x08,0x08}},
	{0x6F, 01, {0x10}},
	/* VDC gain */
	{0xB7, 16, {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x07,0x8E,0x07,0x8E,0x08,0x0E,0x08,0x0E}},
	{0x6F, 01, {0x20}},
	{0xB7, 14, {0x07,0x7F,0x07,0x7F,0x07,0x76,0x07,0x76,0x08,0x00,0x08,0x00,0x0A,0x44}},
	{REGFLAG_END_OF_TABLE, 0x00, {}}
};

static struct LCM_setting_table mode_144hz_setting_p10[] = {
	{0x2F, 01, {0x03}},
	{0xF0, 05, {0x55,0xAA,0x52,0x08,0x08}},
	{0x6F, 01, {0x10}},
	/* VDC gain */
	{0xB7, 16, {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x07,0x8E,0x07,0x8E,0x0B,0x6C,0x0B,0x6C}},
	{0x6F, 01, {0x20}},
	{0xB7, 14, {0x0B,0xCE,0x0B,0xCE,0x0B,0x4C,0x0B,0x4C,0x0B,0x46,0x0B,0x46,0x0C,0x43}},
	{REGFLAG_END_OF_TABLE, 0x00, {}}
};

static struct LCM_setting_table mode_120hz_setting_p10[] = {
	{0x2F, 01, {0x00}},
	{0xF0, 05, {0x55,0xAA,0x52,0x08,0x08}},
	{0x6F, 01, {0x10}},
	/* VDC gain */
	{0xB7, 16, {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x07,0x8E,0x07,0x8E,0x08,0x0E,0x08,0x0E}},
	{0x6F, 01, {0x20}},
	{0xB7, 14, {0x08,0x00,0x08,0x00,0x08,0x00,0x08,0x00,0x08,0x00,0x08,0x00,0x0A,0x28}},
	{REGFLAG_END_OF_TABLE, 0x00, {}}
};

static struct LCM_setting_table mode_90hz_setting_p10[] = {
	{0x2F, 01, {0x01}},
	{0xF0, 05, {0x55,0xAA,0x52,0x08,0x08}},
	{0x6F, 01, {0x10}},
	/* VDC gain */
	{0xB7, 16, {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x07,0x8E,0x07,0x8E,0x08,0x0E,0x08,0x0E}},
	{0x6F, 01, {0x20}},
	{0xB7, 14, {0x08,0x00,0x08,0x00,0x08,0x00,0x08,0x00,0x08,0x00,0x08,0x00,0x0A,0x28}},
	{REGFLAG_END_OF_TABLE, 0x00, {}}
};

static struct LCM_setting_table mode_60hz_setting_p10[] = {
	{0x2F, 01, {0x02}},
	{0xF0, 05, {0x55,0xAA,0x52,0x08,0x08}},
	{0x6F, 01, {0x10}},
	/* VDC gain */
	{0xB7, 16, {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x07,0x8E,0x07,0x8E,0x08,0x0E,0x08,0x0E}},
	{0x6F, 01, {0x20}},
	{0xB7, 14, {0x08,0x00,0x08,0x00,0x08,0x00,0x08,0x00,0x08,0x00,0x08,0x00,0x0A,0x28}},
	{REGFLAG_END_OF_TABLE, 0x00, {}}
};

static struct LCM_setting_table mode_144hz_setting_p11[] = {
	{0x2F, 01, {0x03}},
	{0xF0, 05, {0x55,0xAA,0x52,0x08,0x08}},
	{0x6F, 01, {0x10}},
	/* VDC gain */
	{0xB7, 16, {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0B,0xA4,0x0B,0xA4,0x0C,0x3E,0x0C,0x3E}},
	{0x6F, 01, {0x20}},
	{0xB7, 14, {0x0C,0x6A,0x0C,0x6A,0x0C,0x16,0x0C,0x16,0x0A,0xE4,0x0A,0xE4,0x0B,0x40}},
	{REGFLAG_END_OF_TABLE, 0x00, {}}
};

static struct LCM_setting_table mode_120hz_setting_p11[] = {
	{0x2F, 01, {0x00}},
	{0xF0, 05, {0x55,0xAA,0x52,0x08,0x08}},
	{0x6F, 01, {0x10}},
	/* VDC gain */
	{0xB7, 16, {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x07,0x8E,0x07,0x8E,0x08,0x10,0x08,0x10}},
	{0x6F, 01, {0x20}},
	{0xB7, 14, {0x08,0x5A,0x08,0x5A,0x08,0x3C,0x08,0x3C,0x08,0x00,0x08,0x00,0x09,0xB0}},
	{REGFLAG_END_OF_TABLE, 0x00, {}}
};

static struct LCM_setting_table mode_90hz_setting_p11[] = {
	{0x2F, 01, {0x01}},
	{0xF0, 05, {0x55,0xAA,0x52,0x08,0x08}},
	{0x6F, 01, {0x10}},
	/* VDC gain */
	{0xB7, 16, {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x07,0x8E,0x07,0x8E,0x08,0x10,0x08,0x10}},
	{0x6F, 01, {0x20}},
	{0xB7, 14, {0x08,0x5A,0x08,0x5A,0x08,0x3C,0x08,0x3C,0x08,0x00,0x08,0x00,0x09,0xB0}},
	{REGFLAG_END_OF_TABLE, 0x00, {}}
};

static struct LCM_setting_table mode_60hz_setting_p11[] = {
	{0x2F, 01, {0x02}},
	{0xF0, 05, {0x55,0xAA,0x52,0x08,0x08}},
	{0x6F, 01, {0x10}},
	/* VDC gain */
	{0xB7, 16, {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x07,0x8E,0x07,0x8E,0x08,0x10,0x08,0x10}},
	{0x6F, 01, {0x20}},
	{0xB7, 14, {0x08,0x5A,0x08,0x5A,0x08,0x3C,0x08,0x3C,0x08,0x00,0x08,0x00,0x09,0xB0}},
	{REGFLAG_END_OF_TABLE, 0x00, {}}
};

static struct LCM_setting_table mode_144hz_setting_p20[] = {
	{0x2F, 01, {0x03}},
	{0xF0, 05, {0x55,0xAA,0x52,0x08,0x08}},
	{0x6F, 01, {0x10}},
	/* VDC gain */
	{0xB7, 16, {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0B,0xA4,0x0B,0xA4,0x0C,0x3E,0x0C,0x3E}},
	{0x6F, 01, {0x20}},
	{0xB7, 14, {0x0B,0x7C,0x0B,0x7C,0x0B,0x54,0x0B,0x54,0x0A,0xF0,0x0A,0xF0,0x0A,0xDC}},
	{REGFLAG_END_OF_TABLE, 0x00, {}}
};

static struct LCM_setting_table mode_120hz_setting_p20[] = {
	{0x2F, 01, {0x00}},
	{0xF0, 05, {0x55,0xAA,0x52,0x08,0x08}},
	{0x6F, 01, {0x10}},
	/* VDC gain */
	{0xB7, 16, {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x07,0x8E,0x07,0x8E,0x08,0x10,0x08,0x10}},
	{0x6F, 01, {0x20}},
	{0xB7, 14, {0x08,0x5A,0x08,0x5A,0x08,0x3C,0x08,0x3C,0x08,0x00,0x08,0x00,0x0A,0x30}},
	{REGFLAG_END_OF_TABLE, 0x00, {}}
};

static struct LCM_setting_table mode_90hz_setting_p20[] = {
	{0x2F, 01, {0x01}},
	{0xF0, 05, {0x55,0xAA,0x52,0x08,0x08}},
	{0x6F, 01, {0x10}},
	/* VDC gain */
	{0xB7, 16, {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x07,0x8E,0x07,0x8E,0x08,0x10,0x08,0x10}},
	{0x6F, 01, {0x20}},
	{0xB7, 14, {0x08,0x5A,0x08,0x5A,0x08,0x3C,0x08,0x3C,0x08,0x00,0x08,0x00,0x0A,0x30}},
	{REGFLAG_END_OF_TABLE, 0x00, {}}
};

static struct LCM_setting_table mode_60hz_setting_p20[] = {
	{0x2F, 01, {0x02}},
	{0xF0, 05, {0x55,0xAA,0x52,0x08,0x08}},
	{0x6F, 01, {0x10}},
	/* VDC gain */
	{0xB7, 16, {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x07,0x8E,0x07,0x8E,0x08,0x10,0x08,0x10}},
	{0x6F, 01, {0x20}},
	{0xB7, 14, {0x08,0x5A,0x08,0x5A,0x08,0x3C,0x08,0x3C,0x08,0x00,0x08,0x00,0x0A,0x30}},
	{REGFLAG_END_OF_TABLE, 0x00, {}}
};
/* mode switch end */

/* GIR start */
static struct LCM_setting_table gir_off_settings[] = {
	{0x5F, 01, {0x01}},
};

static struct LCM_setting_table gir_on_settings[] = {
	{0x5F, 01, {0x00}},
};
/* GIR end */

enum LHBM_BL_INTERVAL {
	LHBM_BL_INTERVAL_1_START = 0x000F,
	LHBM_BL_INTERVAL_1_END   = 0x051B,
	LHBM_BL_INTERVAL_2_START = 0x051C,
	LHBM_BL_INTERVAL_2_END   = 0x2CCB,
	LHBM_BL_INTERVAL_3_START = 0x2CCC,
	LHBM_BL_INTERVAL_3_END   = 0x3CF3
};

#if 0
static int aod_off_cmd_line = 1;
static int lhbm_on_interval_1_pmic_index  = 5;
static int lhbm_on_interval_1_alpha_index = 23;
static int lhbm_on_interval_1_gamma_index = 26;
static struct LCM_setting_table lhbm_on_bl_interval_1[] = {
	//aod off
	{0x38, 01, {0x00}},
	//normal lhbm setting
	{0x88,  9, {0x01, 0x02, 0x62, 0x09, 0x8B, 0x00, 0x00, 0x00, 0x00}},
	{0xF0, 05, {0x55, 0xAA, 0x52, 0x08, 0x00}},
	{0xDF, 01, {0x09}},
	{0x6F, 01, {0x34}},
	{0xDF, 01, {0x33}},  //need update pmic
	{0x6F, 01, {0x37}},
	{0xDF, 03, {0x00, 0x00, 0x18}},
	{0x6F, 01, {0xC1}},
	{0xDF, 02, {0x10, 0xA0}},
	{0x6F, 01, {0x30}},
	{0xDF, 02, {0x01, 0x16}},
	{0xF0, 05, {0x55, 0xAA, 0x52, 0x08, 0x01}},
	{0x6F, 01, {0x2A}},
	{0xB9, 01, {0x00}},
	{0xDE, 01, {0x10}},
	{0x6F, 01, {0x02}},
	{0xDE, 01, {0x10}},
	{0x6F, 01, {0x06}},
	{0xDE, 04, {0x00, 0x0E, 0x00, 0x3A}},
	{0xF0, 05, {0x55, 0xAA, 0x52, 0x08, 0x08}},
	{0x6F, 01, {0x4A}},
	{0xB8, 02, {0x08, 0x00}},
	{0x87, 03, {0x25, 0x0F, 0xFF}},         //need update alpha
	{0x8B, 01, {0x10}},  //LHBM LUT ON
	{0xF0, 05, {0x55, 0xAA, 0x52, 0x08, 0x02}},
	{0xD1, 06, {0x00, 0x00, 0x00, 0x00, 0x00, 0x00}},   //need update gamma
};

static int lhbm_on_interval_2_pmic_index  = 5;
static int lhbm_on_interval_2_51_index    = 22;
static int lhbm_on_interval_2_gamma_index = 25;
static struct LCM_setting_table lhbm_on_bl_interval_2[] = {
	//aod off
	{0x38, 01, {0x00}},
	//normal lhbm setting
	{0x88,  9, {0x01, 0x02, 0x62, 0x09, 0x8B, 0x00, 0x00, 0x00, 0x00}},
	{0xF0, 05, {0x55, 0xAA, 0x52, 0x08, 0x00}},
	{0xDF, 01, {0x01}},
	{0x6F, 01, {0x34}},
	{0xDF, 01, {0x10}},  //need update pmic
	{0x6F, 01, {0x37}},
	{0xDF, 03, {0x00, 0x00, 0x18}},
	{0x6F, 01, {0xC1}},
	{0xDF, 02, {0x10, 0xA0}},
	{0x6F, 01, {0x30}},
	{0xDF, 02, {0x01, 0x06}},
	{0xF0, 05, {0x55, 0xAA, 0x52, 0x08, 0x01}},
	{0x6F, 01, {0x2A}},
	{0xB9, 01, {0x00}},
	{0xDE, 01, {0x10}},
	{0x6F, 01, {0x02}},
	{0xDE, 01, {0x10}},
	{0xF0, 05, {0x55, 0xAA, 0x52, 0x08, 0x08}},
	{0x6F, 01, {0x4A}},
	{0xB8, 02, {0x08, 0x00}}, 
	{0x87, 03, {0x05, 0x3F, 0xF0}},
	{0x51, 02, {0x00, 0x00}},                 //need update
	{0x8B, 01, {0x00}},
	{0xF0, 05, {0x55, 0xAA, 0x52, 0x08, 0x02}},
	{0xD1, 06, {0x00, 0x00, 0x00, 0x00, 0x00, 0x00}},   //need update gamma
};

static int lhbm_on_interval_3_pmic_index  = 5;
static int lhbm_on_interval_3_alpha_index = 30;
static int lhbm_on_interval_3_gamma_index = 33;
static struct LCM_setting_table lhbm_on_bl_interval_3[] = {
	//aod off
	{0x38, 01, {0x00}},
	//normal lhbm setting
	{0x88,  9, {0x01, 0x02, 0x62, 0x09, 0x8B, 0x00, 0x00, 0x00, 0x00}},
	{0xF0, 05, {0x55, 0xAA, 0x52, 0x08, 0x00}},
	{0xDF, 01, {0x09}},
	{0x6F, 01, {0x34}},
	{0xDF, 01, {0x10}},  //need update pmic
	{0x6F, 01, {0xC1}},
	{0xDF, 02, {0x10, 0xA0}},
	{0x6F, 01, {0x30}},
	{0xDF, 02, {0x01, 0x1A}},
	{0xF0, 05, {0x55, 0xAA, 0x52, 0x08, 0x01}},
	{0x6F, 01, {0x2A}},
	{0xB9, 01, {0xC0}},
	{0xDE, 01, {0x10}},
	{0x6F, 01, {0x02}},
	{0xDE, 01, {0x10}},
	{0x6F, 01, {0x06}},
	{0xDE, 04, {0x00, 0x0E, 0x00, 0x15}},
	{0x6F, 01, {0x2A}},
	{0xB9, 01, {0x00}},
	{0x6F, 01, {0x0C}},
	{0xB9, 01, {0xC8}},
	{0x6F, 01, {0x22}},
	{0xB9, 01, {0x9C}},
	{0x6F, 01, {0x36}},
	{0xB9, 01, {0xA0}},
	{0xF0, 05, {0x55, 0xAA, 0x52, 0x08, 0x08}},
	{0x6F, 01, {0x4A}},
	{0xB8, 02, {0x0C, 0x14}},
	{0x51, 02, {0x3C, 0xF3}},
	{0x87, 03, {0x25, 0x00, 0x00}},             //need update alpha
	{0x8B, 01, {0x10}}, //LHBM LUT ON
	{0xF0, 05, {0x55, 0xAA, 0x52, 0x08, 0x02}},
	{0xD1, 06, {0x00, 0x00, 0x00, 0x00, 0x00, 0x00}},   //need update gamma
};

static struct LCM_setting_table lhbm_off_bl_interval_1[] = { //2nit~80nit
	{0x51, 02, {0x00, 0x00}},
	{0x87, 01, {0x24}}, //FPR OFF
	{0x8B, 01, {0x00}}, //LHBM LUT OFF
};
static struct LCM_setting_table lhbm_off_bl_interval_2[] = { //80nit~700nit
	{0x51, 02, {0x00, 0x00}},
	{0x87, 01, {0x04}}, //FPR OFF
	{0x8B, 01, {0x00}}, //LHBM LUT OFF
};
static struct LCM_setting_table lhbm_off_bl_interval_3[] = { //700nit~1600nit
	{0x51, 02, {0x00, 0x00}},
	{0x87, 01, {0x24}}, //FPR OFF
	{0x8B, 01, {0x00}}, //LHBM LUT OFF
};
/* lhbm cmd end */

/* lhbm ratio */
static unsigned int gamma_ratio_w1300[][3] = {
	{47302, 47417, 49058}, //000F_051B
	{47091, 47234, 48762}, //051C_0707
	{46971, 47041, 48407}, //0708_08F3
	{46856, 46883, 48085}, //08F4_0ADF
	{46775, 46767, 47836}, //0AE0_0CCB
	{46708, 46665, 47668}, //0CCC_10A1
	{46658, 46605, 47490}, //10A2_1479
	{46619, 46546, 47368}, //147A_1850
	{46576, 46486, 47263}, //1851_1C27
	{46542, 46438, 47173}, //1C28_1FFE
	{46514, 46406, 47095}, //1FFF_228D
	{46482, 46364, 47038}, //228E_251C
	{46444, 46326, 46959}, //251D_27AB
	{46422, 46300, 46917}, //27AC_2A3A
	{46407, 46273, 46887}, //2A3B_2CCA
	{46355, 46223, 46805}, //2CCB_2CCB
	{42366, 42248, 42474}, //2CCC_3CF3
};
static unsigned int gamma_ratio_w1300_inverval[] = {
	0x051B,0x0707,0x08F3,0x0ADF,0x0CCB,0x10A1,0x1479,0x1850,0x1C27,
	0x1FFE,0x228D,0x251C,0x27AB,0x2A3A,0x2CCA,0x2CCB,0x3CF3,
};

static unsigned int gamma_ratio_g500[][3] = {
	{19998, 41902, 20244},//000F_051B
	{19607, 41481, 19890},//051C_2CCB
	{17178, 37907, 18182},//2CCC_3CF3
};
static unsigned int gamma_ratio_g500_inverval[] = {
	0x051B,0x2CCB,0x3CF3,
};

static unsigned int gamma_ratio_w250[][3] = {
	{40700, 40848, 40854},//000F_051B
	{40432, 40590, 40547},//051C_2CCB
	{36939, 37020, 36957},//2CCC_3CF3
};
static unsigned int gamma_ratio_w250_inverval[] = {
	0x051B,0x2CCB,0x3CF3,
};

static unsigned int gamma_ratio_inverval_start = 0x000F;
/* lhbm ratio end */
#endif

/*
static struct LCM_setting_table dimming_on[] = {
	{0x53, 01, {0x28}},
	{0xF0, 05, {0x55, 0xAA, 0x52, 0x08, 0x00}},
	{0xB2, 02, {0x09, 0x60}},
	{0x6F, 01, {0x05}},
	{0xB2, 02, {0x08, 0x08}},
};
*/

static unsigned int o12_36_dphy_rc_buf_thresh[14] = {
	896, 1792, 2688, 3584, 4480, 5376, 6272, 6720, 7168, 7616, 7744, 7872, 8000, 8064};
static unsigned int o12_36_dphy_range_min_qp[15] = {
	0, 4, 5, 5, 7, 7, 7, 7, 7, 7, 9, 9, 9, 13, 16};
static unsigned int o12_36_dphy_range_max_qp[15] = {
	8, 8, 9, 10, 11, 11, 11, 12, 13, 14, 14, 15, 15, 16, 17};
static int o12_36_dphy_range_bpg_ofs[15] = {
	2, 0, 0, -2, -4, -6, -8, -8, -8, -10, -10, -12, -12, -12, -12};

static struct LCM_setting_table bl_value_table[] = {
	{0x51, 02, {0x00, 0x00}}
};

#ifdef CONFIG_FACTORY_BUILD
static struct LCM_setting_table doze_enable_h[] = {
	{0x6F, 01, {0x04}},
	{0x51, 02, {0x0F, 0xFF}},
	{0x39, 01, {0x00}},
};
static struct LCM_setting_table doze_enable_l[] = {
	{0x6F, 01, {0x04}},
	{0x51, 02, {0x07, 0xFC}},
	{0x39, 01, {0x00}},
};

static struct LCM_setting_table doze_disable_t[] = {
	{0x38, 01, {0x00}},
};
#endif

#ifndef CONFIG_FACTORY_BUILD
static struct LCM_setting_table backlight_h[] = {
	{0x51, 06, {0x03, 0x24, 0x03, 0x24, 0x0F, 0xFF}},
};
static struct LCM_setting_table backlight_l[] = {
	{0x51, 06, {0x00, 0x3B, 0x00, 0x3B, 0x07, 0xFC}},
};
static struct LCM_setting_table backlight_0[] = {
	{0x51, 06, {0x00, 0x00, 0x00, 0x00, 0x00, 0x00}},
};
#endif

/*
static struct LCM_setting_table nvt_mode_60hz_setting[] = {
	{0x4E, 05, {0x56, 0x54, 0x39, 0x00, 0x00}},
};
static struct LCM_setting_table nvt_mode_90hz_setting[] = {
	{0x4E, 05, {0x56, 0x54, 0x39, 0x01, 0x00}},
};
static struct LCM_setting_table nvt_mode_120hz_setting[] = {
	{0x4E, 05, {0x56, 0x54, 0x39, 0x02, 0x00}},
};
static struct LCM_setting_table nvt_mode_144hz_setting[] = {
	{0x4E, 05, {0x56, 0x54, 0x39, 0x03, 0x00}},
};
*/

#endif // end of _PANEL_O12_36_02_0B_DSC_CMD_H_
