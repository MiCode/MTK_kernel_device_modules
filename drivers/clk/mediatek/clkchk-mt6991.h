/* SPDX-License-Identifier: GPL-2.0 */
/*
 * Copyright (c) 2024 MediaTek Inc.
 * Author: Chong-ming Wei <chong-ming.wei@mediatek.com>
 */

#ifndef __DRV_CLKCHK_MT6991_H
#define __DRV_CLKCHK_MT6991_H

enum chk_sys_id {
	ck = 0,
	apmixed = 1,
	ck2 = 2,
	apmixed2 = 3,
	apifrbus_ao_io_reg_bus = 4,
	impe = 5,
	impw = 6,
	impn = 7,
	ifr_mem = 8,
	impc = 9,
	perao = 10,
	usb_d_p1 = 11,
	ssusb_device_p2 = 12,
	ufsao = 13,
	pext = 14,
	pext1 = 15,
	ssr_top = 16,
	spm = 17,
	vlp_ck = 18,
	scp_i3c = 19,
	afe = 20,
	mminfra_config = 21,
	mminfra_ao_config = 22,
	mminfra1_config = 23,
	mmpc = 24,
	mm = 25,
	mm1 = 26,
	ovl = 27,
	ovl1 = 28,
	img = 29,
	dip_top_dip1 = 30,
	dip_nr1_dip1 = 31,
	dip_nr2_dip1 = 32,
	wpe1_dip1 = 33,
	wpe2_dip1 = 34,
	wpe3_dip1 = 35,
	traw_dip1 = 36,
	traw_cap_dip1 = 37,
	img_v = 38,
	vde1 = 39,
	vde2 = 40,
	ven1 = 41,
	ven2 = 42,
	ven_c2 = 43,
	cam_m = 44,
	cam_mr = 45,
	camsys_ipe = 46,
	cam_ra = 47,
	camsys_rmsa = 48,
	cam_ya = 49,
	cam_rb = 50,
	camsys_rmsb = 51,
	cam_yb = 52,
	cam_rc = 53,
	camsys_rmsc = 54,
	cam_yc = 55,
	ccu = 56,
	cam_v = 57,
	mdp = 58,
	mdp1 = 59,
	mm_v = 60,
	mfg_ao = 61,
	mfgsc0_ao = 62,
	mfgsc1_ao = 63,
	cci = 64,
	cpu_ll = 65,
	cpu_bl = 66,
	cpu_b = 67,
	ptp = 68,
	hwv = 69,
	mm_hwv = 70,
	mm_vcore_pm = 71,
	isp_main_pm = 72,
	isp_dip_pm = 73,
	isp_traw_pm = 74,
	isp_wpe_eis_pm = 75,
	isp_wpe_tnr_pm = 76,
	isp_wpe_lite_pm = 77,
	disp0_pm = 78,
	disp1_pm = 79,
	ovl0_pm = 80,
	ovl1_pm = 81,
	mml1_pm = 82,
	mml0_pm = 83,
	edptx_pm = 84,
	dptx_pm = 85,
	vdec0_pm = 86,
	vdec1_pm = 87,
	venc1_pm = 88,
	venc2_pm = 89,
	cam_rawa_pm = 90,
	cam_rawb_pm = 91,
	cam_rawc_pm = 92,
	cam_rmsa_pm = 93,
	cam_rmsb_pm = 94,
	cam_rmsc_pm = 95,
	cam_mraw_pm = 96,
	cam_main_pm = 97,
	cam_ccu_pm = 98,
	mminfra_hwvote = 99,
	irq_step_debug = 100,
	chk_sys_num = 101,
};

enum chk_pd_id {
	MT6991_CHK_PD_MD1 = 0,
	MT6991_CHK_PD_CONN = 1,
	MT6991_CHK_PD_SSUSB_P0 = 2,
	MT6991_CHK_PD_SSUSB_DP_PHY_P0 = 3,
	MT6991_CHK_PD_SSUSB_P1 = 4,
	MT6991_CHK_PD_SSUSB_P23 = 5,
	MT6991_CHK_PD_SSUSB_PHY_P2 = 6,
	MT6991_CHK_PD_PEXTP_MAC0 = 7,
	MT6991_CHK_PD_PEXTP_MAC1 = 8,
	MT6991_CHK_PD_PEXTP_MAC2 = 9,
	MT6991_CHK_PD_PEXTP_PHY0 = 10,
	MT6991_CHK_PD_PEXTP_PHY1 = 11,
	MT6991_CHK_PD_PEXTP_PHY2 = 12,
	MT6991_CHK_PD_ADSP_AO = 13,
	MT6991_CHK_PD_ADSP_INFRA = 14,
	MT6991_CHK_PD_AUDIO = 15,
	MT6991_CHK_PD_ADSP_TOP = 16,
	MT6991_CHK_PD_MM_PROC = 17,
	MT6991_CHK_PD_SSRSYS = 18,
	MT6991_CHK_PD_MM_INFRA_AO = 19,
	MT6991_CHK_PD_MM_INFRA0 = 20,
	MT6991_CHK_PD_MM_INFRA1 = 21,
	MT6991_CHK_PD_ISP_VCORE = 22,
	MT6991_CHK_PD_ISP_MAIN = 23,
	MT6991_CHK_PD_ISP_TRAW = 24,
	MT6991_CHK_PD_ISP_DIP = 25,
	MT6991_CHK_PD_ISP_WPE_EIS = 26,
	MT6991_CHK_PD_ISP_WPE_TNR = 27,
	MT6991_CHK_PD_ISP_WPE_LITE = 28,
	MT6991_CHK_PD_VDE_VCORE0 = 29,
	MT6991_CHK_PD_VDE0 = 30,
	MT6991_CHK_PD_VDE1 = 31,
	MT6991_CHK_PD_VEN0 = 32,
	MT6991_CHK_PD_VEN1 = 33,
	MT6991_CHK_PD_VEN2 = 34,
	MT6991_CHK_PD_CAM_VCORE = 35,
	MT6991_CHK_PD_CAM_MAIN = 36,
	MT6991_CHK_PD_CAM_MRAW = 37,
	MT6991_CHK_PD_CAM_RAWA = 38,
	MT6991_CHK_PD_CAM_RAWB = 39,
	MT6991_CHK_PD_CAM_RAWC = 40,
	MT6991_CHK_PD_CAM_RMSA = 41,
	MT6991_CHK_PD_CAM_RMSB = 42,
	MT6991_CHK_PD_CAM_RMSC = 43,
	MT6991_CHK_PD_CAM_CCU = 44,
	MT6991_CHK_PD_DISP_VCORE = 45,
	MT6991_CHK_PD_DIS0 = 46,
	MT6991_CHK_PD_DIS1 = 47,
	MT6991_CHK_PD_OVL0 = 48,
	MT6991_CHK_PD_OVL1 = 49,
	MT6991_CHK_PD_DISP_EDPTX = 50,
	MT6991_CHK_PD_DISP_DPTX = 51,
	MT6991_CHK_PD_MML0 = 52,
	MT6991_CHK_PD_MML1 = 53,
	MT6991_CHK_PD_CSI_BS_RX = 54,
	MT6991_CHK_PD_CSI_LS_RX = 55,
	MT6991_CHK_PD_DSI_PHY0 = 56,
	MT6991_CHK_PD_DSI_PHY1 = 57,
	MT6991_CHK_PD_DSI_PHY2 = 58,
	MT6991_CHK_PD_NUM,
};

const char *mt6991_chk_pd_name[MT6991_CHK_PD_NUM] = {
	[0] = "md1",
	[1] = "conn",
	[2] = "ssusb_p0",
	[3] = "ssusb_dp_phy_p0",
	[4] = "ssusb_p1",
	[5] = "ssusb_p23",
	[6] = "ssusb_phy_p2",
	[7] = "pextp_mac0",
	[8] = "pextp_mac1",
	[9] = "pextp_mac2",
	[10] = "pextp_phy0",
	[11] = "pextp_phy1",
	[12] = "pextp_phy2",
	[13] = "adsp_ao",
	[14] = "adsp_infra",
	[15] = "audio",
	[16] = "adsp_top",
	[17] = "mm_proc",
	[18] = "ssrsys",
	[19] = "mm_infra_ao",
	[20] = "mm_infra0",
	[21] = "mm_infra1",
	[22] = "isp_vcore",
	[23] = "isp_main",
	[24] = "isp_traw",
	[25] = "isp_dip",
	[26] = "isp_wpe_eis",
	[27] = "isp_wpe_tnr",
	[28] = "isp_wpe_lite",
	[29] = "vde_vcore0",
	[30] = "vde0",
	[31] = "vde1",
	[32] = "ven0",
	[33] = "ven1",
	[34] = "ven2",
	[35] = "cam_vcore",
	[36] = "cam_main",
	[37] = "cam_mraw",
	[38] = "cam_rawa",
	[39] = "cam_rawb",
	[40] = "cam_rawc",
	[41] = "cam_rmsa",
	[42] = "cam_rmsb",
	[43] = "cam_rmsc",
	[44] = "cam_ccu",
	[45] = "disp_vcore",
	[46] = "dis0",
	[47] = "dis1",
	[48] = "ovl0",
	[49] = "ovl1",
	[50] = "disp_edptx",
	[51] = "disp_dptx",
	[52] = "mml0",
	[53] = "mml1",
	[54] = "csi_bs_rx",
	[55] = "csi_ls_rx",
	[56] = "dsi_phy0",
	[57] = "dsi_phy1",
	[58] = "dsi_phy2",
};

enum pm_state {
	BUS_PROT_SET_ACK = 0,
	SRAM_OFF_ACK = 1,
	RTFF_BK = 2,
	SET_ISO = 3,
	SET_ISO_CLK_DIS = 4,
	SET_CLK_DIS = 5,
	SET_CLK_DIS_RSTB = 6,
	CLR_RSTB = 7,
	POWER_OFF_ACK = 8,
	POWER_OFF_2ND_ACK = 9,
	POWER_OFF_IDLE = 10,
	POWER_ON = 11,
	POWER_ON_ACK = 12,
	POWER_ON_2ND = 13,
	POWER_ON_2ND_ACK = 14,
	CLR_CLK_DIS = 15,
	CLR_ISO = 16,
	CLK_ISO_RSTB = 17,
	SET_RSTB = 18,
	RTFF_RS = 19,
	SRAM_ON_ACK = 20,
	BUS_PROT_CLR_ACK = 21,
	SRAM_REPAIR_ACK = 22,
	POWER_ON_IDLE = 23,
	PM_STATE_NUM = 24,
};

#ifdef CONFIG_MTK_DVFSRC_HELPER
extern int get_sw_req_vcore_opp(void);
#endif

extern void print_subsys_reg_mt6991(enum chk_sys_id id);
extern void set_subsys_reg_dump_mt6991(enum chk_sys_id id[]);
extern void get_subsys_reg_dump_mt6991(void);
extern u32 get_mt6991_reg_value(u32 id, u32 ofs);
extern int pdchk_pd_is_on(int pd_id);
extern void clkchk_debug_dump_mt6991(enum chk_sys_id id[],
		char *exception_name, bool trigger_vcp_dump, bool trigger_bugon);
#endif	/* __DRV_CLKCHK_MT6991_H */
